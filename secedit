#!/bin/bash
# by: lilongen@gmail.com
#

file=$1
passphase=$2
readonly=${3:-0}
argvCnt=$#

tmpFile="__$file.tmp"
aesPrefix="openssl enc -aes-256-cbc -salt -a"

usage() {
	echo "usage:"
	echo "$0 %file %passphase"
	echo "$0 %file, and input %passphase lazzly"
	echo 
}

plusPassphaseInAesPrefix() {
	aesPrefix="$aesPrefix -pass pass:$passphase"
}

validate() {
	if [ $argvCnt -lt 1 ] || [ "$file" == "help" ] || [ "$file" == "-h" ]; then
		usage
		exit 1
	fi

	if [ ! -f $file ]; then
		echo "file not exist!"
		exit 2
	fi
	
	if [ "$passphase" == "" ]; then
		read -s passphase
	fi
}

getMd5sum() {
	echo -n $(openssl md5 $1 | awk '{print $2}')
}

getTimestamp() {
	echo -n $(date +%04Y%02m%02d.%02k%02M%02S)
}

snapshotFile() {
	timestamp=$(getTimestamp)
	cp $file $file.$timestamp
}

clean() {
	rm -rf $tmpFile
}

decrypt() {
	$aesPrefix -d -in $file -out $tmpFile
	
	if [ $? -ne 0 ]; then
		echo "incorrect password!"
		clean
		exit 3
	fi	
}

encrypt() {
	$aesPrefix -e -in $tmpFile -out $file
	clean
	cat $file
}

edit() {
	md5sum0=$(getMd5sum $tmpFile)
	vim $tmpFile
	md5sum1=$(getMd5sum $tmpFile)

	if [ "$md5sum0" == "$md5sum1" ]; then
		echo "no changes!"
		clean
		exit 0
	fi	
}

doReadonly() {
	cat $tmpFile
	clean	
	exit 0	
}

main() {
	validate
	plusPassphaseInAesPrefix
	
	decrypt

	if [ $readonly -eq 1 ]; then
		doReadonly
	fi

	edit
	snapshotFile
	encrypt
}

main
